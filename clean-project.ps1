# Shivaay Music - Complete Project Cleaner Script
# рдпрд╣ script рдЖрдкрдХреЗ Android project рдХреЛ completely clean рдХрд░ рджреЗрдЧреА
# Run: .\clean-project.ps1

Write-Host "ЁЯЪА рд╢реБрд░реВ рд╣реЛ рд░рд╣рд╛ рд╣реИ Complete Project Cleaning..." -ForegroundColor Green
Write-Host ""

# Function to safely remove directories
function Remove-DirectorySafely {
    param([string]$Path, [string]$Description)
    
    if (Test-Path $Path) {
        try {
            Write-Host "ЁЯЧСя╕П  $Description рдХреЛ delete рдХрд░ рд░рд╣реЗ рд╣реИрдВ..." -ForegroundColor Yellow
            Remove-Item -Recurse -Force $Path -ErrorAction Stop
            Write-Host "тЬЕ $Description successfully deleted!" -ForegroundColor Green
        }
        catch {
            Write-Host "тЪая╕П  $Description delete рдХрд░рдиреЗ рдореЗрдВ error: $($_.Exception.Message)" -ForegroundColor Red
        }
    }
    else {
        Write-Host "тД╣я╕П  $Description already рдирд╣реАрдВ рд╣реИ" -ForegroundColor Cyan
    }
}

# Function to safely remove files
function Remove-FileSafely {
    param([string]$Path, [string]$Description)
    
    if (Test-Path $Path) {
        try {
            Write-Host "ЁЯЧСя╕П  $Description рдХреЛ delete рдХрд░ рд░рд╣реЗ рд╣реИрдВ..." -ForegroundColor Yellow
            Remove-Item -Force $Path -ErrorAction Stop
            Write-Host "тЬЕ $Description successfully deleted!" -ForegroundColor Green
        }
        catch {
            Write-Host "тЪая╕П  $Description delete рдХрд░рдиреЗ рдореЗрдВ error: $($_.Exception.Message)" -ForegroundColor Red
        }
    }
    else {
        Write-Host "тД╣я╕П  $Description already рдирд╣реАрдВ рд╣реИ" -ForegroundColor Cyan
    }
}

Write-Host "ЁЯЫС Step 1: Gradle Daemons рдХреЛ stop рдХрд░ рд░рд╣реЗ рд╣реИрдВ..." -ForegroundColor Magenta
try {
    & .\gradlew.bat --stop 2>$null
    Write-Host "тЬЕ Gradle daemons stopped!" -ForegroundColor Green
}
catch {
    Write-Host "тЪая╕П  Gradle daemon stop рдХрд░рдиреЗ рдореЗрдВ error, continuing..." -ForegroundColor Yellow
}

Write-Host ""
Write-Host "ЁЯТА Step 2: Java processes рдХреЛ kill рдХрд░ рд░рд╣реЗ рд╣реИрдВ..." -ForegroundColor Magenta
try {
    taskkill /f /im java.exe 2>$null
    Start-Sleep -Seconds 2
    Write-Host "тЬЕ Java processes killed!" -ForegroundColor Green
}
catch {
    Write-Host "тД╣я╕П  рдХреЛрдИ Java process running рдирд╣реАрдВ рдерд╛" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "ЁЯз╣ Step 3: Project рдХреЗ рд╕рд╛рд░реЗ build directories clean рдХрд░ рд░рд╣реЗ рд╣реИрдВ..." -ForegroundColor Magenta

# Project рдХреА рд╕рд╛рд░реА build directories
$buildDirs = @(
    "build",
    "app\build",
    "innertube\build", 
    "jossredconnect\build",
    "kizzy\build",
    "kugou\build",
    "lrclib\build",
    "material-color-utilities\build"
)

foreach ($dir in $buildDirs) {
    Remove-DirectorySafely -Path $dir -Description "Build directory: $dir"
}

# Recursively find рдФрд░ delete рдХрд░реЗрдВ рд╕рд╛рд░реА build directories
Write-Host "ЁЯФН Recursively рд╕рд╛рд░реА build directories рдвреВрдВрдв рд░рд╣реЗ рд╣реИрдВ..." -ForegroundColor Yellow
try {
    Get-ChildItem -Recurse -Directory -Name "build" -ErrorAction SilentlyContinue | ForEach-Object {
        Remove-DirectorySafely -Path $_ -Description "Build directory: $_"
    }
}
catch {
    Write-Host "тД╣я╕П  Recursive build cleanup completed" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "ЁЯУ▒ Step 4: Android specific cache directories..." -ForegroundColor Magenta

# Android specific directories
$androidDirs = @(
    "app\.cxx",
    "app\src\main\assets\temp",
    ".gradle",
    ".idea\caches"
)

foreach ($dir in $androidDirs) {
    Remove-DirectorySafely -Path $dir -Description "Android cache: $dir"
}

Write-Host ""
Write-Host "ЁЯМР Step 5: Global Gradle cache clean рдХрд░ рд░рд╣реЗ рд╣реИрдВ..." -ForegroundColor Magenta

# Global Gradle cache directories
$gradleCacheDirs = @(
    "$env:USERPROFILE\.gradle\caches",
    "$env:USERPROFILE\.gradle\daemon", 
    "$env:USERPROFILE\.gradle\wrapper\dists\.tmp",
    "$env:USERPROFILE\.android\build-cache"
)

foreach ($dir in $gradleCacheDirs) {
    Remove-DirectorySafely -Path $dir -Description "Global cache: $dir"
}

Write-Host ""
Write-Host "ЁЯУЭ Step 6: Temp files рдФрд░ logs clean рдХрд░ рд░рд╣реЗ рд╣реИрдВ..." -ForegroundColor Magenta

# Temp files рдФрд░ logs
$tempFiles = @(
    "*.log",
    "*.tmp",
    "hs_err_pid*.log",
    "replay_pid*.log"
)

foreach ($pattern in $tempFiles) {
    try {
        Get-ChildItem -File $pattern -ErrorAction SilentlyContinue | ForEach-Object {
            Remove-FileSafely -Path $_.FullName -Description "Temp file: $($_.Name)"
        }
    }
    catch {
        # Silent continue
    }
}

Write-Host ""
Write-Host "ЁЯФз Step 7: IDE specific files clean рдХрд░ рд░рд╣реЗ рд╣реИрдВ..." -ForegroundColor Magenta

$ideDirs = @(
    ".idea\shelf",
    ".idea\workspace.xml",
    ".idea\tasks.xml",
    ".vscode",
    "*.iml"
)

foreach ($item in $ideDirs) {
    if ($item.Contains("*")) {
        try {
            Get-ChildItem -File $item -ErrorAction SilentlyContinue | ForEach-Object {
                Remove-FileSafely -Path $_.FullName -Description "IDE file: $($_.Name)"
            }
        }
        catch {
            # Silent continue
        }
    }
    else {
        Remove-DirectorySafely -Path $item -Description "IDE directory: $item"
    }
}

Write-Host ""
Write-Host "ЁЯОп Step 8: Final Gradle clean command..." -ForegroundColor Magenta

try {
    Write-Host "тЦ╢я╕П  Gradle clean command рдЪрд▓рд╛ рд░рд╣реЗ рд╣реИрдВ..." -ForegroundColor Yellow
    & .\gradlew.bat clean --no-daemon 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "тЬЕ Gradle clean successful!" -ForegroundColor Green
    } else {
        Write-Host "тЪая╕П  Gradle clean рдореЗрдВ рдХреБрдЫ warnings рд╣реЛ рд╕рдХрддреА рд╣реИрдВ, рд▓реЗрдХрд┐рди project clean рд╣реЛ рдЧрдпрд╛" -ForegroundColor Yellow
    }
}
catch {
    Write-Host "тД╣я╕П  Gradle clean skip рдХрд░ рд░рд╣реЗ рд╣реИрдВ (files already cleaned)" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "=" * 60 -ForegroundColor Green
Write-Host "ЁЯОЙ PROJECT COMPLETELY CLEANED! ЁЯОЙ" -ForegroundColor Green -BackgroundColor Black
Write-Host "=" * 60 -ForegroundColor Green
Write-Host ""
Write-Host "тЬЕ рдЕрдм рдЖрдк fresh build рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ:" -ForegroundColor Cyan
Write-Host "   .\gradlew.bat build" -ForegroundColor White -BackgroundColor DarkBlue
Write-Host ""
Write-Host "тЬЕ Release APK рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП:" -ForegroundColor Cyan  
Write-Host "   .\gradlew.bat assembleRelease" -ForegroundColor White -BackgroundColor DarkBlue
Write-Host ""
Write-Host "ЁЯЪА Happy Coding! Project clean рдФрд░ ready рд╣реИ!" -ForegroundColor Green

# Optional: Ask user if they want to build immediately
Write-Host ""
$buildNow = Read-Host "рдХреНрдпрд╛ рдЖрдк рдЕрднреА build рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ? (y/n)"
if ($buildNow -eq 'y' -or $buildNow -eq 'Y' -or $buildNow -eq 'yes') {
    Write-Host ""
    Write-Host "ЁЯЪА Building project..." -ForegroundColor Green
    & .\gradlew.bat build
}